<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tgis.fclts.service.FcltsMngMapper">

<insert id="insertFcltsInfo_GT_A064_P" parameterType="map">
	INSERT INTO GT_A064_P
		(
			MGRNU,
			CTK_MGRNU,
			CSS_NAM,
			PE_NAM,
			GU_NAM,
			DONG_NAM,
			SCH_NAM,
			MINX,
			MINY,
			MAXX,
			MAXY,
			XCE,
			YCE,
			PE_CDE,
			GU_CDE,
			DONG_CDE,
			CSS_MGRNU,
			SCH_MGRNU,
			RI_NAM,
			RI_CDE,
			JIBUN,
			PNU,
			XGEO,
			ROD_NAM,
			ROD_MGRNU,
			MOR,
			MOP,
			MRK_CDE,
			MRK_KND,
			STD,
			EVE,
			DRN,
			ESB_CPY,
			ESB_NAM,
			ESB_COS,
			ESB_YMD,
			SPRT_MOP,
			SPRT_KND,
			LGR_TYPE,
			LGR_GBN,
			SPT_MRK,
			ASN_MGRNU,
			SPT_MRK_ET,
			NTC,
			MRK_CDE_WE,
			MRK_DESC,
			ROD_FRM,
			ROD_KND,
			SPRT_MGRNU,
			REG_YMD

		)
	VALUES
		(
			GET_MGRNU('GT_A064_P'),
			NULL,
			#{cssNam},
			#{peNam},
			#{guNam},
			#{dongNam},
			#{schNam},
			#{minX},
			#{minY},
			#{maxX},
			#{maxY},
			#{xce},
			#{yce},
			#{peCde},
			#{guCde},
			#{dongCde},
			#{cssMgrnu},
			#{schMgrnu},
			#{liNam},
			#{liCde},
			#{jibun},
			#{pnu},
			MDSYS.SDO_GEOMETRY(#{geom},
			5181),
			#{rodNam},
			#{rodMgrnu},
			#{mor},
			#{mop},
			#{mrkCde},
			#{mrkKnd},
			#{std},
			#{eve},
			#{drn},
			#{esbCpy},
			#{esbNam},
			#{esbCos},
			#{esbYmd},
			#{sprtMop},
			#{sprtKnd},
			#{lgrType},
			#{lgrGbn},
			#{sptMrk},
			#{asnMgrnu},
			#{sptMrkEt},
			#{ntc},
			#{mrkCdeWe},
			#{mrkDesc},
			#{rodFrm},
			#{rodKnd},
			#{sprtMgrnu},
			SYSDATE

		)

</insert>

	<!-- 안전표지 > 표지 리스트 조회 -->
	<select id="getIgtSignList" parameterType="map" resultType="egovMap">
		<![CDATA[
		SELECT TEMP.*
		FROM	(SELECT 	ROWNUM  AS NUM,
						TEMP.*,
						COUNT(*) OVER() AS TOTALROWS
		FROM   (SELECT
						MRK_KND,
						CTT,
						ROTATE,
						MRK_CDE
		FROM SIGN_IMN
		WHERE 1=1
		]]>
		<if test='mrkKnd != null and mrkKnd != ""'>
			<![CDATA[ AND MRK_KND = #{mrkKnd} ]]>
		</if>
		<if test='mrkCde != null and mrkCde != ""'>
			<![CDATA[ AND MRK_CDE = #{mrkCde}]]>
		</if>
		<![CDATA[
		  ORDER BY MRK_CDE ASC ) TEMP) TEMP WHERE NUM BETWEEN #{rows} * ( #{page} - 1 ) + 1 AND #{rows}* #{page}
				]]>
	</select>

<!-- 안전표지 상세조회 -->
<select id="selectFcltsInfo_GT_A064_P" parameterType="map" resultType="egovMap">
SELECT MGRNU,
	'청주시'	||' '|| GU_NAM || ' ' || DONG_NAM || ' ' || RI_NAM || JIBUN AS ADDR,
			CTK_MGRNU,
			CSS_NAM,
			PE_NAM,
			SCH_NAM,
			MINX,
			MINY,
			MAXX,
			MAXY,
			XCE,
			YCE,
			PE_CDE,
			GU_CDE,
			DONG_CDE,
			CSS_MGRNU,
			SCH_MGRNU,
			RI_CDE,
			PNU,
			XGEO,
			ROD_NAM,
			ROD_MGRNU,
			MOR,
			TO_CODE('A064_P','MOR',MOR) AS MOR_NAM,
			MOP,
			TO_CODE('A064_P','MOP',MOP) AS MOP_NAM,
			MRK_CDE,
			MRK_KND,
			TO_CODE('A064_P','MRK_KND',MRK_KND) AS MRK_KND_NAM,
			STD,
			TO_CODE('A064_P','STD',STD) AS STD_NAM,
			EVE,
			TO_CODE('ALL','EVE',EVE) AS EVE_NAM,
			DRN,
			ESB_CPY,
			ESB_NAM,
			ESB_COS,
			TO_CHAR(ESB_YMD, 'YYYY-MM-DD') AS ESB_YMD,
			SPRT_MOP,
			TO_CODE('A064_P','SPRT_MOP',SPRT_MOP) AS SPRT_MOP_NAM,
			SPRT_KND,
			TO_CODE('A064_P','SPRT_KND',SPRT_KND) AS SPRT_KND_NAM,
			LGR_TYPE,
			TO_CODE('A064_P','LGR_TYPE',LGR_TYPE) AS LGR_TYPE_NAM,
			LGR_GBN,
			TO_CODE('A064_P','LGR_GBN',LGR_GBN) AS LGR_GBN_NAM,
			SPT_MRK,
			TO_CODE('A064_P','SPT_MRK',SPT_MRK) AS SPT_MRK_NAM,
			ASN_MGRNU,
			SPT_MRK_ET,
			NTC,
			MRK_CDE_WE,
			MRK_DESC,
			ROD_FRM,
			TO_CODE('A064_P','ROD_FRM',ROD_FRM) AS ROD_FRM_NAM,
			ROD_KND,
			TO_CODE('A064_P','ROD_KND',ROD_KND) AS ROD_KND_NAM,
			SPRT_MGRNU,
			REG_YMD,
			UPT_YMD
FROM GT_A064_P
WHERE MGRNU = #{mgrnu}

</select>

<!--  안전표지 삭제 -->
<delete id="deleteFcltsInfo_GT_A064_P" parameterType="map">
DELETE FROM GT_A064_P
WHERE MGRNU = #{mgrnu}
</delete>

<!-- 안전표지 수정 -->
<update id="updateFcltsInfo_GT_A064_P" parameterType="map">
UPDATE GT_A064_P
SET EVE = #{eve},
	ESB_YMD = #{esbYmd},
	ESB_CPY = #{esbCpy},
	MRK_CDE = #{mrkCde},
	NTC = #{ntc},
	MRK_KND = #{mrkKnd},
	STD = #{std},
	MOR = #{mor},
	MOP = #{mop},
	SPRT_MOP = #{sprtMop},
	SPRT_KND = #{sprtKnd},
	ROD_KND = #{rodKnd},
	ROD_FRM = #{rodFrm},
	ASN_MGRNU = #{asnMgrnu},
	LGR_TYPE = #{lgrType},
	LGR_GBN = #{lgrGbn},
	SPT_MRK_ET = #{sptMrkEt},
	MRK_CDE_WE = #{mrkCdeWe},
	MRK_DESC = #{mrkDesc},
	SPRT_MGRNU = #{sprtMgrnu},
	UPT_YMD = SYSDATE,
	CTK_MGRNU = null,
	CSS_NAM = #{cssNam},
	PE_NAM = #{peNam},
	GU_NAM = #{guNam},
	DONG_NAM = #{dongNam},
	SCH_NAM = #{schNam},
	PE_CDE = #{peCde},
	GU_CDE = #{guCde},
	DONG_CDE = #{dongCde},
	CSS_MGRNU = #{cssMgrnu},
	SCH_MGRNU = #{schMgrnu},
	RI_NAM = #{liNam},
	RI_CDE = #{liCde},
	JIBUN = #{jibun},
	PNU = #{pnu},
	ROD_NAM = #{rodNam},
	ROD_MGRNU = #{rodMgrnu},
	MAXX = #{maxX},
	MAXY = #{maxY},
	MINX = #{minX},
	MINY = #{minY},
	XGEO = MDSYS.SDO_GEOMETRY(#{geom},5181)
WHERE MGRNU = #{mgrnu}
</update>

<!-- 이력조회리스트 -->
<select id="selectWorkList_GT_A064_P" parameterType="map" resultType="egovMap">
	SELECT *
	FROM(SELECT ROWNUM AS NUM,
		TEMP.*,
		COUNT(*) OVER() AS TOTALROWS
		FROM ( SELECT MGRNU,
					MGRNU_IDX,
					WORK_CDE,
					TO_CODE('CHG_HISTORY','WORK_CDE',WORK_CDE) AS WORK_CDE_NAM,
					WORKTM,
					WORKUSER,
					WORK_BG
			FROM GT_A064_P_WORK
			WHERE MGRNU = #{mgrnu} AND WORK_ACTIVE = 1
			ORDER BY MGRNU_IDX DESC ) TEMP
		ORDER BY MGRNU_IDX DESC,
				MGRNU ASC) TEMP WHERE NUM BETWEEN #{rows} * ( #{page} - 1 ) + 1 AND #{rows}* #{page}

</select>

<!-- 이력등록 -->
<insert id="insertWorkList_GT_A064_P" parameterType="map">
<selectKey resultType="int" keyProperty="mgrnuIdx" order="BEFORE">
	SELECT NVL(MAX(MGRNU_IDX), 0) +1 AS mgrnuIdx
	FROM GT_A064_P_WORK
	WHERE MGRNU = #{mgrnu}
</selectKey>

INSERT INTO GT_A064_P_WORK
		( GEOMSEQ,
			MGRNU,
			CTK_MGRNU,
			CSS_NAM,
			PE_NAM,
			GU_NAM,
			DONG_NAM,
			SCH_NAM,
			MINX,
			MINY,
			MAXX,
			MAXY,
			XCE,
			YCE,
			PE_CDE,
			GU_CDE,
			DONG_CDE,
			CSS_MGRNU,
			SCH_MGRNU,
			RI_NAM,
			RI_CDE,
			JIBUN,
			PNU,
			XGEO,
			ROD_NAM,
			ROD_MGRNU,
			MOR,
			MOP,
			MRK_CDE,
			MRK_KND,
			STD,
			EVE,
			DRN,
			ESB_CPY,
			ESB_NAM,
			ESB_COS,
			ESB_YMD,
			SPRT_MOP,
			SPRT_KND,
			LGR_TYPE,
			LGR_GBN,
			SPT_MRK,
			ASN_MGRNU,
			SPT_MRK_ET,
			NTC,
			MRK_CDE_WE,
			MRK_DESC,
			ROD_FRM,
			ROD_KND,
			REG_YMD,
			UPT_YMD,
	XGEO,
             MGRNU_IDX,
             WORKUSER,
             WORKTM,
             WORK_CDE,
             WORK_BG,
             WORK_REG_YMD,
             WORK_OP,
             WORK_ACTIVE,
             CHK_CITY)
SELECT  GEOMSEQ,
	MGRNU,
			CTK_MGRNU,
			CSS_NAM,
			PE_NAM,
			GU_NAM,
			DONG_NAM,
			SCH_NAM,
			MINX,
			MINY,
			MAXX,
			MAXY,
			XCE,
			YCE,
			PE_CDE,
			GU_CDE,
			DONG_CDE,
			CSS_MGRNU,
			SCH_MGRNU,
			RI_NAM,
			RI_CDE,
			JIBUN,
			PNU,
			XGEO,
			ROD_NAM,
			ROD_MGRNU,
			MOR,
			MOP,
			MRK_CDE,
			MRK_KND,
			STD,
			EVE,
			DRN,
			ESB_CPY,
			ESB_NAM,
			ESB_COS,
			ESB_YMD,
			SPRT_MOP,
			SPRT_KND,
			LGR_TYPE,
			LGR_GBN,
			SPT_MRK,
			ASN_MGRNU,
			SPT_MRK_ET,
			NTC,
			MRK_CDE_WE,
			MRK_DESC,
			ROD_FRM,
			ROD_KND,
			REG_YMD,
			UPT_YMD,
	XGEO,
   #{mgrnuIdx},
   #{workuser},
   #{worktm},
   #{workCde},
   #{workBg},
   #{workRegYmd},
   #{workRegOp},
   1,
   #{chkCity}
FROM GT_A064_P
WHERE MGRNU = #{mgrnu}

</insert>

<!-- 이력조회 -->
<select id="selectInfo_GT_A064_P" parameterType="map" resultType="egovMap">
SELECT MGRNU,
		MGRNU_IDX,
		WORKUSER,
		WORKTM,
		WORK_CDE,
		TO_CODE('CHG_HISTORY','WORK_CDE',WORK_CDE) AS WORK_CDE_NAM,
		WORK_BG,
		WORK_REG_YMD,
		WORK_OP,
		WORK_ACTIVE,
		CHK_CITY
FROM GT_A064_P_WORK
WHERE MGRNU = #{mgrnu} AND WORK_ACTIVE = 1 AND MGRNU_IDX = #{mgrnuIdx}
</select>

<!-- 이력수정 -->
<update id="updateWorkList_GT_A064_P" parameterType="map">
UPDATE GT_A064_P_WORK
SET WORKTM = #{worktm},
	WORKUSER = #{workuser},
	WORK_CDE = #{workCde},
	WORK_BG = #{workBg}
WHERE MGRNU = #{mgrnu} AND WORK_ACTIVE = 1 AND MGRNU_IDX = #{mgrnuIdx}

</update>

<!-- 이력삭제 -->
<update id="deleteWorkList_GT_A064_P" parameterType="map">
UPDATE GT_A064_P_WORK
SET WORK_ACTIVE = 0
WHERE MGRNU = #{mgrnu} AND MGRNU_IDX = #{mgrnuIdx}
</update>
</mapper>